* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body {
    --colorOwl: rgb(90, 73, 54);
    --colorButton: rgb(148, 125, 98);
}

.s1 {
    position: relative;
    width: 100%;
    height: 100vh;
}

#gameMemoryContainer,
.owlContainer,
.owl,
.owlBody,
.coverOwl {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#gameMemoryContainer,
.coverOwlAcive {
    width: 76vw;
    height: 75vh;
    background-image: linear-gradient(
        to bottom,
        rgb(85, 140, 211) 30%,
        rgb(78, 126, 189) 60%,
        rgb(58, 104, 163) 80%,
        rgb(49, 95, 155) 100%
    );
    border-radius: 30px;
    z-index: 1;
}

#gameMemoryContainer {
    box-shadow: 0px -5px 5px 2px rgba(38, 83, 141, 0.9) inset,
        0px 3px 5px 2px rgba(103, 161, 238, 0.8) inset,
        0px 5px 12px 3px rgba(30, 30, 30, 0.7);
}

.coverOwlAcive {
    box-shadow: 0px -5px 5px 2px rgba(38, 83, 141, 0.9) inset,
        0px 3px 5px 2px rgba(103, 161, 238, 0.8) inset;
}

.coverOwl {
    width: 76vw;
    height: 75vh;
    z-index: 0;
}

.owlContainer {
    top: 40%;
    height: 65vh;
    width: 65vh;
}

.owlContainer .owl {
    height: 70%;
    width: 70%;
}

.owlBody {
    height: 70%;
    width: 60%;
    background-color: var(--colorOwl);
    border-radius: 80% 80% 80% 80%/ 60% 60% 100% 100%;
    box-shadow: 0px 2px 10px 5px rgb(44, 44, 44);
}

.owlEar {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-top: 11vh solid var(--colorOwl);
    border-left: 2vh solid transparent;
    border-right: 2vh solid transparent;
    height: 0;
    width: 100%;
}

.owlLeftEye,
.owlRightEye {
    position: absolute;
    top: 31%;
    transform: translate(-50%, -50%);
    height: 12vh;
    width: 12vh;
    background-color: rgb(252, 252, 252);
    border-radius: 50%;
}

.owlLeftEye {
    left: 31%;
}

.owlRightEye {
    left: 69%;
}

.owlLeftPupil,
.owlRightPupil {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 55%;
    width: 55%;
    background: radial-gradient(
        circle at 30% 50%,
        rgb(7, 5, 4) 5%,
        rgb(90, 73, 54) 26%,
        rgb(143, 124, 102) 29%,
        rgb(240, 231, 220) 90%
    );
    border-radius: 50%;
    animation: eyes linear 5s infinite both;
}

.owlbeak {
    position: absolute;
    top: 53%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0;
    height: 0;
    border-left: 1.2vh solid transparent;
    border-right: 1.2vh solid transparent;
    border-top: 3vh solid rgb(235, 235, 235);
}

.owlLeftTail,
.owlRightTail {
    position: absolute;
    top: 78%;
    width: 8vh;
    height: 8vh;
    background-color: var(--colorOwl);
    box-shadow: 0px 10px 1px 0px rgb(44, 44, 44);
}

.owlLeftTail {
    left: 44%;
    transform: translate(-50%, -50%) rotate(35deg);
    border-radius: 50% 50% 20% 100% / 50% 50% 30% 100%;
}

.owlRightTail {
    left: 56%;
    transform: translate(-50%, -50%) rotate(-35deg);
    border-radius: 50% 50% 100% 20% / 50% 50% 100% 30%;
}

.gameMemory {
    position: absolute;
    top: 110%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 350px;
    height: 9vh;
    text-align: center;
}

.startGame,
.reloadGame,
.info {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -30vh);
    width: 600px;
    height: 10vh;
    border-radius: 2vh 2vh 0 0;
    background-image: linear-gradient(
        to bottom,
        rgb(112, 84, 52) 30%,
        rgb(138, 111, 80) 60%,
        rgb(116, 71, 21) 80%,
        rgb(177, 149, 117) 100%
    );
    box-shadow: 0px -5px 5px 1px rgba(95, 58, 15, 0.747) inset,
        0px 3px 5px 1px rgb(107, 79, 47) inset,
        0px -2px 5px 1px rgba(30, 30, 30, 0.6);
    border-radius: 2vh;
    box-shadow: 0 -2px 5px 2px rgba(0, 0, 0, 0.3);
    text-align: center;
    transition: 0.5s;
}

.startGame {
    transform: translate(-50%, -45vh);
    cursor: pointer;
}

.reloadGame {
    cursor: pointer;
}

.startGame:hover,
.reloadUp:hover {
    background-image: linear-gradient(
        to bottom,
        rgb(102, 74, 42) 30%,
        rgb(128, 98, 65) 60%,
        rgb(90, 53, 10) 80%,
        rgb(105, 66, 21) 100%
    );
    box-shadow: 0px -5px 5px 2px rgba(83, 50, 11, 0.747) inset,
        0px 3px 5px 2px rgb(95, 68, 37) inset,
        0px -2px 5px 1px rgba(30, 30, 30, 0.6);
}

.startGame p,
.reloadGame p,
.info p {
    font-family: "Shadows Into Light", cursive;
    font-weight: bold;
    color: rgb(240, 240, 240);
    font-size: 3vh;
    line-height: 7vh;
    letter-spacing: 3px;
    word-spacing: 5px;
    text-transform: uppercase;
    text-shadow: 1px 2px #353535;
}

.gameMemory p {
    font-family: "Shadows Into Light", cursive;
    color: rgb(240, 240, 240);
    word-spacing: 5px;
    text-shadow: 1px 2px #353535;
    font-size: 4.5vh;
    line-height: 7.5vh;
}

#gameMemoryContainer .gameContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: center;
    perspective: 700px;
    transition: 0.5s;
}

#gameMemoryContainer .gameContainer div {
    position: relative;
    width: 22%;
    height: 28%;
    border-radius: 20px;
}

.winn {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    height: 70vh;
    width: 70vh;
    background-image: url(img/winner.png);
    background-size: 70vh;
    background-position: center;
    background-repeat: no-repeat;
    z-index: 1;
}

.hidden,
.one,
.two,
.three,
.four,
.fife,
.six {
    position: relative;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    background-color: rgb(235, 235, 235);
    transition: 0.5s;
}

.one {
    background-image: url(img/owl.png);
    border: rgb(90, 73, 54) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(87, 50, 6, 0.6) inset,
        0px 2px 2px 2px rgba(100, 69, 34, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
}

.two {
    background-image: url(img/fox.png);
    border: rgb(231, 155, 12) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(184, 105, 9, 0.6) inset,
        0px 2px 2px 2px rgba(117, 88, 23, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
}

.three {
    background-image: url(img/dog.png);
    border: rgb(253, 195, 33) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(184, 143, 9, 0.6) inset,
        0px 2px 2px 2px rgba(148, 129, 24, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
}

.four {
    background-image: url(img/rabbit.png);
    border: rgb(216, 124, 144) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(250, 67, 107, 0.6) inset,
        0px 2px 2px 2px rgba(182, 72, 96, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
}

.fife {
    background-image: url(img/donkey.png);
    border: rgb(30, 98, 161) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(32, 100, 226, 0.6) inset,
        0px 2px 2px 2px rgba(72, 120, 182, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
}

.six {
    background-image: url(img/cow.png);
    border: rgb(63, 75, 83) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(103, 118, 145, 0.6) inset,
        0px 2px 2px 2px rgba(59, 79, 104, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
}

.off {
    background-color: rgba(89, 109, 167, 0);
    background-image: none;
    box-shadow: 0 -0px 0px 0px rgba(32, 32, 32, 0);
    border: rgba(247, 247, 247, 0) outset 6px;
    transition: 0.5s;
    z-index: -1;
}

.hidden {
    background-image: url(img/owlRevers.png);
    border: var(--colorButton) outset 6px;
    box-shadow: 0px -2px 2px 2px rgba(83, 50, 11, 0.6) inset,
        0px 2px 2px 2px rgba(95, 68, 37, 0.6) inset,
        0 -2px 10px 4px rgba(32, 32, 32, 0.9);
    transform: rotateY(180deg) scale(1);
    transform-style: preserve-3d;
    cursor: pointer;
}

.hidden:hover {
    transform: rotateY(180deg) scale(0.93);
    box-shadow: 0px -2px 1px 2px rgba(126, 83, 31, 0.6) inset,
        0px 2px 1px 2px rgba(153, 114, 69, 0.6) inset,
        0 -2px 5px 2px rgba(32, 32, 32, 0.9);
    background-color: rgb(255, 255, 255);
}

@keyframes eyes {
    0% {
        background: radial-gradient(
            circle at 30% 50%,
            rgb(7, 5, 4) 5%,
            rgb(90, 73, 54) 26%,
            rgb(143, 124, 102) 29%,
            rgb(240, 231, 220) 90%
        );
    }
    50% {
        background: radial-gradient(
            circle at 70% 50%,
            rgb(7, 5, 4) 5%,
            rgb(90, 73, 54) 26%,
            rgb(143, 124, 102) 29%,
            rgb(240, 231, 220) 90%
        );
    }
    100% {
        background: radial-gradient(
            circle at 30% 50%,
            rgb(7, 5, 4) 5%,
            rgb(90, 73, 54) 26%,
            rgb(143, 124, 102) 29%,
            rgb(240, 231, 220) 90%
        );
    }
}

.startDown {
    animation: down linear 1s normal both;
}

@keyframes down {
    0% {
        transform: translate(-50%, -45vh);
    }

    100% {
        transform: translate(-50%, -30vh);
    }
}

.infoUp {
    animation: upInfo linear 1s 0.5s normal both;
}

@keyframes upInfo {
    0% {
        transform: translate(-50%, -30vh);
    }

    100% {
        transform: translate(-50%, -45vh);
    }
}

.infoDown {
    animation: downInfo linear 1s 0.5s normal both;
}

@keyframes downInfo {
    0% {
        transform: translate(-50%, -45vh);
    }

    100% {
        transform: translate(-50%, -30vh);
    }
}

.reloadUp {
    animation: upReload linear 1s 3.5s normal both;
}

@keyframes upReload {
    0% {
        transform: translate(-50%, -30vh);
    }

    100% {
        transform: translate(-50%, -45vh);
    }
}

.winner {
    animation: winn linear 1.5s 1.5s normal both;
}

@keyframes winn {
    0% {
        transform: translate(-50%, -50%) scale(0);
    }

    100% {
        transform: translate(-50%, -50%) scale(1);
    }
}

@media (max-width: 1025px) {
    .startGame,
    .reloadGame,
    .info {
        width: 300px;
    }
}

@media (max-width: 642px) {
    .startGame,
    .reloadGame,
    .info {
        width: 200px;
    }
    .startGame p,
    .reloadGame p,
    .info p {
        font-size: 2vh;
    }
}

@media (orientation: portrait) {
    .startGame,
    .reloadGame,
    .info {
        width: 220px;
        height: 7vh;
    }
    .startGame {
        transform: translate(-50%, -42vh);
    }

    .startGame p,
    .reloadGame p,
    .info p {
        font-size: 1.8vh;
        line-height: 4.5vh;
    }
    #gameMemoryContainer .gameContainer div {
        position: relative;
        width: 28%;
        height: 21%;
    }

    .startDown {
        animation: down linear 1s normal both;
    }

    @keyframes down {
        0% {
            transform: translate(-50%, -42vh);
        }

        100% {
            transform: translate(-50%, -30vh);
        }
    }
    .infoUp {
        animation: upInfo linear 1s 0.5s normal both;
    }

    @keyframes upInfo {
        0% {
            transform: translate(-50%, -30vh);
        }

        100% {
            transform: translate(-50%, -42vh);
        }
    }

    .infoDown {
        animation: downInfo linear 1s 0.5s normal both;
    }

    @keyframes downInfo {
        0% {
            transform: translate(-50%, -42vh);
        }

        100% {
            transform: translate(-50%, -30vh);
        }
    }

    .reloadUp {
        animation: upReload linear 1s 3.5s normal both;
    }

    @keyframes upReload {
        0% {
            transform: translate(-50%, -30vh);
        }

        100% {
            transform: translate(-50%, -42vh);
        }
    }
    .winner {
        animation: winn linear 1.5s 1.5s normal both;
    }

    @keyframes winn {
        0% {
            transform: translate(-50%, -50%) scale(0);
        }

        100% {
            transform: translate(-50%, -50%) scale(0.6);
        }
    }
}
